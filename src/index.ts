import { writeFileSync } from "fs";
import { placeholderRegExp } from "./placeholderRegExp";
import { readFile } from "./readFile";
import { dirname, join } from "path";

/**
 * Generates a file by injecting the content from one or more fragment files into a template.
 *
 * The path for each fragment should be included as part of the fragment placeholder within the template.
 *
 * For full detail, refer to the
 * {@link https://github.com/drtrt-org/inject-file-fragments#inject-file-fragments README}.
 * @param templateFilePath - The path to the template file.
 * @param generatedFilePath - The path to the file that is generated by injecting file fragments into the template.
 */
export const injectFileFragments = (templateFilePath: string, generatedFilePath: string): void => {
    if (!templateFilePath || !generatedFilePath) {
        throw new Error(
            "You must provide both 'templateFilePath' and 'destinationFilePath' arguments.",
        );
    }

    const templateFileContent = readFile(templateFilePath, "Template File");

    const result = templateFileContent.replace(
        placeholderRegExp,
        (match, fragmentRelativeFilePath) => {
            const fragmentAbsoluteFilePath = join(
                dirname(templateFilePath),
                fragmentRelativeFilePath,
            );

            const fragmentFileContent = readFile(fragmentAbsoluteFilePath, "Fragment File");
            return fragmentFileContent;
        },
    );

    writeFileSync(generatedFilePath, result);
};
